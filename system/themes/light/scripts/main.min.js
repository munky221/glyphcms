

/*
** JQUERY STUFF
*/


var transitionDelay = '500';
var packeryContainer;
var pckry;
var navbarAccordion;

$(document).ready(function(){

    navbarAccordion = function(targ) {
        console.log("Accordion initiated: " + targ);

        var allPanels = $(targ + ' ul').hide();

        $(targ + ' a').on('click', function(e) {
            var $this = $(this);
            if ($this.attr('href') == "javascript:void(0);") {
                e.preventDefault();
                console.log("ACCORDION");
                console.log('Accordion header click');
                var grp = $(this).next();
                console.log(grp);
                $(targ + ' ul').slideUp('500');
                $(this).next().slideDown('500');
                return false;
            } else {
                console.log($this.parent().parent().parent().prop('tagName'));
                $(targ + " .active").removeClass('active');
                $this.addClass('active');
                $this.parent().parent().prev().addClass('active');
                if ($this.parent().parent().parent().prop('tagName') != 'LI') {
                    $(targ + ' ul').slideUp('500');
                }
                menu_hide();
            }
        });
    }

    navbarAccordion('.nav');
    $('.navbar-brand').on('click',function(){
        $('.navbar-nav .active').removeClass('active');
        $('.navbar-nav ul').slideUp('500');
        menu_hide();
    });

});

var menu_hide = function() {
    if ($(window).width() < 768)
        if ($('.navbar-collapse').is(':visible'))
            $(".navbar-toggle").click();
}

var preload_pictures = function(picture_urls, callback) {
    var loaded = 0;

    for(var i = 0, j = picture_urls.length; i < j; i++) {
            var imgSrc = picture_urls[i].replace(/ /g, '%20');
            var img = new Image();
            img.onload = function() {

                var imgObj = this;
                var bgUrl = 'url("' + imgObj.src + '")';
                // console.log('Preloading: ' + imgObj.src + ' [Done]');

                // if carousel
                if ($('#carousel-slides').length > 0) {
                    
                    // find the image holder
                    $.each($('#carousel-slides li'), function(i,el){
                        var $el = $(el);
                        
                        // fix white space on filenames
                        if (typeof($el.find('img').attr('src')) !== 'undefined')
                            var el_imgsrc = $el.find('img').attr('src').replace(/ /g, '%20');
                        
                        if (el_imgsrc != 'images/blank.gif') {
                            // console.log("Matching: " + el_imgsrc + " === " + imgObj.src)
                            if (el_imgsrc === imgObj.src) {
                                // console.log("Matching image holder: OK");
                                
                                // fit the original image to its container
                                $el.find('img').css({
                                    'width': '100%',
                                    'height': '100%'
                                });
                                
                                // set orientation of photo
                                var imgClass = (imgObj.height > imgObj.width) ? 'portrait-photo' : 'landscape-photo';
                                $el.css({
                                    'background-image': bgUrl
                                }).addClass(imgClass);
                                
                                // remove the slider preloader animation
                                $el.addClass('no-after');
                            }
                        } else {
                            $el.find('img').css({
                                'width': '100%',
                                'height': '100%'
                            });
                        }
                    });
                }

                if(++loaded == picture_urls.length && callback) {
                    console.log('*** All images have been preloaded. ***');
                    callback();
                }
            }
            img.onerror = function() {
                // console.log('Preloading: ' + this.src + ' [Failed]');
            }

            img.src = imgSrc;
            // console.log('Preloading: ' + imgSrc + '...');
    }
};

var showPage = function() {
    $("html, body").animate({ scrollTop: 0 }, "slow");
    $('.preloader').stop().delay(200).fadeOut(transitionDelay);
    $('.page').stop().delay(200).animate({
        'opacity': 1
    },
    transitionDelay, function () {
        console.log('page transition complete');
    });

    // menu_hide();
}

var popupDatShit = function(url,targ, w, h)
{
    console.log("Popping this shit right here: " + url);
    var x = screen.width/2 - w/2;
    var y = screen.height/2 - h/2;
    window.open(url, targ,'height='+h+',width='+w+',left='+x+',top='+y+',toolbar=0,menubar=0,scrollbar=0');
}

var carouselControls = false;
var $carousel;
var currentMouseState;
var carouselIsDragged = false;
var carouselTapX;
var carouselTapY;
var carouselWidth, carouselHeight, carouselXPos, carouselYPos, carouselXEnd, carouselYEnd;
var carouselHoverPad = 200;

/*
** BACKBONE.JS STUFF
*/

// VIEWS & COLLECTIONS

var Homepage = Backbone.Collection.extend({
    url: '/home.php'
});

var homepageDump;
var HomepageView = Backbone.View.extend({
    el: '.page',
    render: function () {
        var that = this;
        var homepage = new Homepage();
        $('.preloader').fadeIn(transitionDelay);
        that.$el.fadeOut(transitionDelay, function () {
            $(this).css({
                'display':'block',
                'opacity':0
            });
            homepage.fetch({
                success: function (homepage) {
                    homepageDump = homepage.toJSON();
                    console.log('*** Home page successfully fetched');
                    var template = _.template($('#homepage-template').html(), {homepage: homepage.models});
                    that.$el.html(template);
                }
            });
        });
    }
});

var Gallery = Backbone.Collection.extend({
    url: '/gallery.php'
});

var GalleryView = Backbone.View.extend({
    el: '.page',

    render: function (options) {

        var that = this;
        $('.preloader').fadeIn(transitionDelay);
        that.$el.fadeOut(transitionDelay, function () {
            $(this).css({
                'display':'block',
                'opacity':0
            });

            if (options.gid) {
                var gallery = new Gallery({gid: options.gid});
            }
            gallery.fetch({
                data: 'gid=' + options.gid,
                success: function (gallery) {
                    console.log('*** Gallery page successfully fetched');
                    var template = _.template($('#gallery-template').html(), {gallery: gallery.models, gid: options.gid});
                    console.log(gallery);
                    that.$el.html(template);
                }
            });
        });
    }
});

var GalleryStream = Backbone.Collection.extend({
    url: '/gallerystream.php'
});
var slideOptions;
var gallerystreamDump;
var GalleryStreamView = Backbone.View.extend({
    el: '.page',

    events: {
        'swipe': 'onSwipe'
    },
    onSwipe: function(e) {
        // console.log(e);
    },
    silent: true,
    render: function (options) {

        var that = this;
        slideOptions = options;
        $('.preloader').fadeIn(transitionDelay);
        that.$el.fadeOut(transitionDelay, function () {
            $(this).css({
                'display':'block',
                'opacity':0
            });

            var gallerystream = new GalleryStream({gid: options.gid, id: options.sid});
            if (options.sli) {
                gallerystream.fetch({
                    data: 'gid=' + options.gid + '&sid=' + options.sid,
                    success: function (gallery) {
                        console.log('*** Gallery Stream page successfully fetched');
                        var template = _.template($('#gallerystream-template').html(), {gallerystream: gallerystream.models, gid: options.gid, sid: options.sid, sli: options.sli});
                        gallerystreamDump = gallerystream.toJSON();
                        that.$el.html(template);
                    }
                });

            } else {
                gallerystream.fetch({
                    data: 'gid=' + options.gid + '&sid=' + options.sid,
                    success: function (gallery) {
                        console.log('*** Gallery Stream page successfully fetched');
                        var template = _.template($('#gallerystream-template').html(), {gallerystream: gallerystream.models, gid: options.gid, sid: options.sid});
                        gallerystreamDump = gallerystream.toJSON();
                        that.$el.html(template);
                    }
                });

            }
        });
    }
});

var StaticPage = Backbone.Collection.extend({
    url: '/page.php'
});
var StaticPageView = Backbone.View.extend({
    el: '.page',

    events: {
        'swipe': 'onSwipe'
    },
    onSwipe: function(e) {
        // console.log(e);
    },
    silent: true,
    render: function (options) {

        var that = this;
        staticpageOptions = options;
        $('.preloader').fadeIn(transitionDelay);
        that.$el.fadeOut(transitionDelay, function () {
            $(this).css({
                'display':'block',
                'opacity':0
            });

            var staticpage = new StaticPage({pid: options.pid});
            staticpage.fetch({
                data: 'pid=' + options.pid,
                success: function (staticpage) {
                    console.log('*** Static page successfully fetched');
                    var template = _.template($('#staticpage-template').html(), {staticpage: staticpage.models});
                    that.$el.html(template);
                }
            });
        });
    }
});

var ExternalPage = Backbone.Collection.extend({
    url: '/external.php'
});
var ExternalPageView = Backbone.View.extend({
    el: '.page',

    events: {
        'swipe': 'onSwipe'
    },
    onSwipe: function(e) {
        // console.log(e);
    },
    silent: true,
    render: function (options) {

        var that = this;
        externalpageOptions = options;
        $('.preloader').fadeIn(transitionDelay);
        that.$el.fadeOut(transitionDelay, function () {
            $(this).css({
                'display':'block',
                'opacity':0
            });

            var externalpage = new ExternalPage({xuri: options.xuri});
            externalpage.fetch({
                data: 'xurl=' + options.xuri,
                success: function (externalpage) {
                    console.log('*** Static page successfully fetched');
                    var template = _.template($('#externalpage-template').html(), {externalpage: externalpage.models});
                    that.$el.html(template);
                }
            });
        });
    }
});

var Slideshow = Backbone.Collection.extend({
    url: '/slideshow.php'
});

var SlideshowView = Backbone.View.extend({
    el: '.page',

    render: function (options) {

        var that = this;
        $('.preloader').fadeIn(transitionDelay);
        that.$el.fadeOut(transitionDelay, function () {
            $(this).css({
                'display':'block',
                'opacity':0
            });

            if (options.sid) {
                var slideshow = new Slideshow({sid: options.sid});
            }
                var slideshow = new Slideshow({sid: options.sid});
            slideshow.fetch({
                data: 'sid=' + options.sid,
                success: function (slideshow) {
                    console.log('*** Slideshow page successfully fetched');
                    var template = _.template($('#slideshow-template').html(), {slideshow: slideshow.models, sid: options.sid});
                    console.log(slideshow);
                    that.$el.html(template);
                }
            });
        });
    }
});

var SlideshowStream = Backbone.Collection.extend({
    url: '/slideshow.php'
});


var slideshowstreamDump;
var SlideshowStreamView = Backbone.View.extend({
    el: '.page',

    events: {
        'swipe': 'onSwipe'
    },
    onSwipe: function(e) {
        // console.log(e);
    },
    silent: true,
    render: function (options) {

        var that = this;
        slideOptions = options;
        $('.preloader').fadeIn(transitionDelay);
        that.$el.fadeOut(transitionDelay, function () {
            $(this).css({
                'display':'block',
                'opacity':0
            });

            var slideshowstream = new SlideshowStream({sid: options.sid});
            if (options.sli) {
                slideshowstream.fetch({
                    data: 'sid=' + options.sid,
                    success: function (slideshow) {
                        console.log('*** Slideshow Stream page successfully fetched');
                        var template = _.template($('#slideshowstream-template').html(), {slideshowstream: slideshowstream.models, sid: options.sid, sli: options.sli});
                        slideshowstreamDump = slideshowstream.toJSON();
                        that.$el.html(template);
                    }
                });

            } else {
                slideshowstream.fetch({
                    data: 'sid=' + options.sid,
                    success: function (slideshow) {
                        console.log('*** Slideshow Stream page successfully fetched');
                        var template = _.template($('#slideshowstream-template').html(), {slideshowstream: slideshowstream.models, sid: options.sid});
                        slideshowstreamDump = slideshowstream.toJSON();
                        that.$el.html(template);
                    }
                });

            }
        });
    }
});

// ROUTER

var PageRouter = Backbone.Router.extend({
    routes: {
        '': 'home',
        'home': 'home',
        'gallery/:gid': 'getGallery',
        'gallery/:gid/:sid/:slide': 'getGalleryStream',
        'page/:pid': 'getStaticPage',
        'ext/:xuri': 'getExternalPage',
        'slideshow/:sid': 'getSlideshow',
        'slideshow/:sid/:slide': 'getSlideshowStream'
    }
});

// Instantiate the viewer
var homepageView = new HomepageView();
var galleryView = new GalleryView();
var gallerystreamView = new GalleryStreamView();
var staticpageView = new StaticPageView();
var externalpageView = new ExternalPageView();
var slideshowView = new SlideshowView();
var slideshowstreamView = new SlideshowStreamView();

// Instantiate the router
var pageRoute = new PageRouter();
pageRoute.on('route:home', function () {
    console.log('*** Home page loaded');
    homepageView.render();
});

// Gallery Router
pageRoute.on('route:getGallery', function (gid) {
    // Note the variable in the route definition being passed in here
    console.log('*** Gallery page loaded');
    console.log( 'Get Gallery id ' + gid );
    galleryView.render({gid: gid});
});

// Gallery View Router
pageRoute.on('route:getGalleryStream', function (gid, sid, sli) {
    // Note the variable in the route definition being passed in here
    console.log('*** Gallery Stream page loaded');
    console.log( 'Get Gallery id ' + gid + ' --- Get Slideshow id ' + sid + ' --- And Slide number ' + sli);
    gallerystreamView.render({gid: gid, sid: sid, sli: sli});
});

// Static Page Router
pageRoute.on('route:getStaticPage', function (pid) {
    // Note the variable in the route definition being passed in here
    console.log('*** Static page loaded');
    console.log( 'Get Static Page id ' + pid);
    staticpageView.render({pid: pid});
});

// External Page Router
pageRoute.on('route:getExternalPage', function (xuri) {
    // Note the variable in the route definition being passed in here
    console.log('*** External page loaded');
    console.log( 'Get External Page URL ' + xuri);
    externalpageView.render({xuri: xuri});
});

// Slideshow Router
pageRoute.on('route:getSlideshow', function (sid) {
    // Note the variable in the route definition being passed in here
    console.log('*** Slideshow page loaded');
    console.log( 'Get Slideshow id ' + sid );
    slideshowView.render({sid: sid});
});

// Slideshow View Router
pageRoute.on('route:getSlideshowStream', function (sid, sli) {
    // Note the variable in the route definition being passed in here
    console.log('*** Slideshow Stream page loaded');
    console.log( 'Get Slideshow id ' + sid + ' --- And Slide number ' + sli);
    slideshowstreamView.render({sid: sid, sli: sli});
});

// Start Backbone history a necessary step for bookmarkable URL's
Backbone.history.start();